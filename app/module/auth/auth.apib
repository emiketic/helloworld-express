
# Group Authentication

### Log in [POST /auth/login{?audience}]

+ Parameters

    + audience: `client` (string) - login audience (`client`, or `admin`).

+ Request (application/json)

        {
          "username": "client@helloworld.emiketic.com",
          "password": "password"
        }

+ Response 200 (application/json)

        {
            "access_token": "ACCESS_TOKEN",
            "audience": "client",
            "user": {
                "id": "f67ebbe0-4cc1-11e8-97ea-c16513384dd0",
                "email": "client@helloworld.emiketic.com",
                "name": "Client",
                "picture_uri": "https://randomuser.me/api/portraits/lego/1.jpg"
            }
        }

+ Response 400 (application/json)

        {
            "code": "InvalidCredentials",
            "message": "Invalid credentials"
        }

### Sign up [POST /auth/signup]

+ Request (application/json)

        {
            "user": {
                "email": "client@helloworld.emiketic.com",
                "password": "password",
                "name": "Client",
                "picture_uri": "https://randomuser.me/api/portraits/lego/1.jpg"
            },
            "client": {
              "...": "..."
            }
        }

+ Response 200 (application/json)

        {
            "access_token": "ACCESS_TOKEN",
            "user": {
                "id": "f67ebbe0-4cc1-11e8-97ea-c16513384dd0",
                "email": "client@helloworld.emiketic.com",
                "name": "Client",
                "picture_uri": "https://randomuser.me/api/portraits/lego/1.jpg"
            }
        }

+ Response 400 (application/json)

        {
            "code": "EmailExists",
            "message": "Email address already exists. Please try password reset."
        }


### Initiate password reset [POST /auth/password-reset/initiate]

+ Request (application/json)

        {
          "email": "client@helloworld.emiketic.com"
        }

+ Response 200 (application/json)

        {
        }


### Perform password reset [POST /auth/password-reset/perform]

+ Request (application/json)

        {
            "token": "{{PASSWORD_RESET_TOKEN}}",
            "password": "password"
        }

+ Response 200 (application/json)

        {
            "access_token": "ACCESS_TOKEN",
            "user": {
                "id": "f67ebbe0-4cc1-11e8-97ea-c16513384dd0",
                "email": "client@helloworld.emiketic.com",
                "name": "Client",
                "picture_uri": "https://randomuser.me/api/portraits/lego/1.jpg"
            }
        }


### Check access token validity [GET /auth/check]

+ Request

    + Headers

            Authorization: Bearer {{ACCESS_TOKEN}}

+ Response 200 (application/json)

        {
        }

+ Response 401 (application/json)

        {
            "code": "Unauthenticated",
            "message": "Not authenticated"
        }

+ Response 403 (application/json)

        {
            "code": "Unauthorized",
            "message": "Not authorized"
        }


### Change password [POST /auth/change-passwemaord]

+ Request

    + Headers

            Authorization: Bearer {{ACCESS_TOKEN}}
            Content-Type: application/json

    + Body

            {
            }

+ Response 200 (application/json)

        {
        }

+ Response 401 (application/json)

        {
            "code": "Unauthenticated",
            "message": "Not authenticated"
        }

+ Response 403 (application/json)

        {
            "code": "Unauthorized",
            "message": "Not authorized"
        }
### Change email [POST /auth/change-email]

+ Request

    + Headers

            Authorization: Bearer {{ACCESS_TOKEN}}
            Content-Type: application/json

    + Body

            {
            }

+ Response 200 (application/json)

        {
        }

+ Response 401 (application/json)

        {
            "code": "Unauthenticated",
            "message": "Not authenticated"
        }

+ Response 403 (application/json)

        {
            "code": "Unauthorized",
            "message": "Not authorized"
        }
